{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"User": {
				"properties": {
					"passwordSalt": {
						"type": "string"
					},
					"passwordHash": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"passwordSalt",
					"passwordHash",
					"lastName",
					"firstName",
					"email",
					"id"
				],
				"type": "object",
				"description": "Model User"
			},
			"ErrorJSON": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.Exclude_keyofUser.id-or-passwordHash-or-passwordSalt__": {
				"properties": {
					"email": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"firstName",
					"lastName"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.id-or-passwordHash-or-passwordSalt_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.id-or-passwordHash-or-passwordSalt__",
				"description": "Construct a type with the properties of T except for those in type K."
			}
		},
		"securitySchemes": {
			"basic": {
				"scheme": "basic",
				"type": "http"
			}
		}
	},
	"info": {
		"title": "users-service",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/users": {
			"get": {
				"operationId": "GetAllUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/User"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Users Controller"
				],
				"security": [],
				"parameters": []
			}
		},
		"/users/{userId}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/User"
										},
										{
											"$ref": "#/components/schemas/ErrorJSON"
										}
									]
								}
							}
						}
					},
					"400": {
						"description": "Missing userId",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					}
				},
				"tags": [
					"Users Controller"
				],
				"security": [
					{
						"basic": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"delete": {
				"operationId": "RemoveUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"message": {
													"type": "string"
												}
											},
											"required": [
												"message"
											],
											"type": "object"
										},
										{
											"$ref": "#/components/schemas/ErrorJSON"
										}
									]
								}
							}
						}
					},
					"400": {
						"description": "Missing userId",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					}
				},
				"tags": [
					"Users Controller"
				],
				"security": [
					{
						"basic": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/users/{userId}/exists": {
			"get": {
				"operationId": "CheckUserExists",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"message": {
													"type": "string"
												}
											},
											"required": [
												"message"
											],
											"type": "object"
										},
										{
											"$ref": "#/components/schemas/ErrorJSON"
										}
									]
								}
							}
						}
					},
					"400": {
						"description": "Missing userId",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					}
				},
				"tags": [
					"Users Controller"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/auth/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/User"
										},
										{
											"$ref": "#/components/schemas/ErrorJSON"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Auth Controller"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"$ref": "#/components/schemas/Omit_User.id-or-passwordHash-or-passwordSalt_"
									},
									{
										"properties": {
											"password": {
												"type": "string"
											}
										},
										"required": [
											"password"
										],
										"type": "object"
									}
								]
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}