{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Reservation": {
				"properties": {
					"userId": {
						"type": "number",
						"format": "double"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"endDate": {
						"type": "string",
						"format": "date-time"
					},
					"startDate": {
						"type": "string",
						"format": "date-time"
					},
					"apartmentId": {
						"type": "number",
						"format": "double"
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"userId",
					"updatedAt",
					"createdAt",
					"endDate",
					"startDate",
					"apartmentId",
					"id"
				],
				"type": "object",
				"description": "Model Reservation"
			},
			"ErrorJSON": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Reservation.Exclude_keyofReservation.id-or-createdAt-or-updatedAt__": {
				"properties": {
					"apartmentId": {
						"type": "number",
						"format": "double"
					},
					"startDate": {
						"type": "string",
						"format": "date-time"
					},
					"endDate": {
						"type": "string",
						"format": "date-time"
					},
					"userId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"apartmentId",
					"startDate",
					"endDate",
					"userId"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Reservation.id-or-createdAt-or-updatedAt_": {
				"$ref": "#/components/schemas/Pick_Reservation.Exclude_keyofReservation.id-or-createdAt-or-updatedAt__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"Apartment": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"rooms": {
						"type": "number",
						"format": "double"
					},
					"country": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"price",
					"rooms",
					"country",
					"city",
					"address",
					"name",
					"id"
				],
				"type": "object",
				"description": "Model Apartment"
			},
			"Pick_Apartment.Exclude_keyofApartment.id-or-createdAt-or-updatedAt__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"country": {
						"type": "string"
					},
					"rooms": {
						"type": "number",
						"format": "double"
					},
					"price": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"address",
					"city",
					"country",
					"rooms",
					"price"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Apartment.id-or-createdAt-or-updatedAt_": {
				"$ref": "#/components/schemas/Pick_Apartment.Exclude_keyofApartment.id-or-createdAt-or-updatedAt__",
				"description": "Construct a type with the properties of T except for those in type K."
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "reservations-service",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/reservations": {
			"get": {
				"operationId": "GetAllReservations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Reservation"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Reservations Controller"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "AddReservation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/Reservation"
										},
										{
											"$ref": "#/components/schemas/ErrorJSON"
										}
									]
								}
							}
						}
					},
					"400": {
						"description": "Missing userId || End date must be after start date || Start date must be in the future || Apartment with id {apartmentId} is not available",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					},
					"404": {
						"description": "Reservation not found || User not found|| Apartment with id {apartmentId} not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					}
				},
				"tags": [
					"Reservations Controller"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Reservation.id-or-createdAt-or-updatedAt_"
							}
						}
					}
				}
			}
		},
		"/reservations/users/{userId}": {
			"get": {
				"operationId": "GetAllReservationsOfUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Reservation"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Reservations Controller"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/reservations/{reservationId}": {
			"get": {
				"operationId": "GetReservation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/Reservation"
										},
										{
											"$ref": "#/components/schemas/ErrorJSON"
										}
									]
								}
							}
						}
					},
					"400": {
						"description": "Missing reservationId",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					},
					"404": {
						"description": "Reservation not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					}
				},
				"tags": [
					"Reservations Controller"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "reservationId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"delete": {
				"operationId": "RemoveReservation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"message": {
													"type": "string"
												}
											},
											"required": [
												"message"
											],
											"type": "object"
										},
										{
											"$ref": "#/components/schemas/ErrorJSON"
										}
									]
								}
							}
						}
					},
					"400": {
						"description": "Missing reservationId",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					},
					"404": {
						"description": "Reservation not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					}
				},
				"tags": [
					"Reservations Controller"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "reservationId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/apartments": {
			"get": {
				"operationId": "GetAllApartments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Apartment"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Apartments Controller"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "city",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "country",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "minRooms",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "maxRooms",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "minPrice",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "maxPrice",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "AddApartment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/Apartment"
										},
										{
											"$ref": "#/components/schemas/ErrorJSON"
										}
									]
								}
							}
						}
					},
					"400": {
						"description": "Rooms must be greater than 0 || Price must be greater than 0",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					}
				},
				"tags": [
					"Apartments Controller"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_Apartment.id-or-createdAt-or-updatedAt_"
							}
						}
					}
				}
			}
		},
		"/apartments/{apartmentId}": {
			"get": {
				"operationId": "GetApartment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/Apartment"
										},
										{
											"$ref": "#/components/schemas/ErrorJSON"
										}
									]
								}
							}
						}
					},
					"400": {
						"description": "Missing apartmentId",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					},
					"404": {
						"description": "Apartment not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					}
				},
				"tags": [
					"Apartments Controller"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "apartmentId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"delete": {
				"operationId": "RemoveApartment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"message": {
													"type": "string"
												}
											},
											"required": [
												"message"
											],
											"type": "object"
										},
										{
											"$ref": "#/components/schemas/ErrorJSON"
										}
									]
								}
							}
						}
					},
					"400": {
						"description": "Missing apartmentId",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					},
					"404": {
						"description": "Apartment not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorJSON"
								}
							}
						}
					}
				},
				"tags": [
					"Apartments Controller"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "apartmentId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}